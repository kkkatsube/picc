services:
    backend:
        image: 'sail-8.4/app'
        build:
            context: './backend/vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-8000}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - './backend:/var/www/html'
        networks:
            - picc
        depends_on:
            - pgsql
            - redis

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        image: 'picc-frontend'
        ports:
            - '${VITE_PORT:-3000}:3000'
        environment:
            - CHOKIDAR_USEPOLLING=true
            - VITE_API_URL=http://backend
        volumes:
            - './frontend:/app'
            - '/app/node_modules'
        networks:
            - picc
        depends_on:
            - backend
    pgsql:
        image: 'postgres:17-alpine'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'picc-pgsql:/var/lib/postgresql/data'
            - './backend/vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - picc
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'picc-redis:/data'
        networks:
            - picc
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    picc:
        driver: bridge
volumes:
    picc-pgsql:
        driver: local
    picc-redis:
        driver: local
